UKRATKO:
SHA256(Masetr)
a=HMAC(adresa, k1) b=AES(password + padding, k2) HMAC(a + b, k3)

Derivirani ključevi su generirani koisteći SHA1PRNG seedan s bajtovima glavne zaporke (UTF-8)

NADUGO:
Ako sustav prilikom pokretanja ne pronađe database.txt datoteku, znači da glavna zaporka još
nije postavljena i od korisnika se traži da unese novu glavnu zaporku.

Ako datoteka dabase.txt postoji, od korisnika se traži da unese postojeću glavnu zaporku kako bi pristupio aplikaciji.

Glavna zaporka se provjerava na način da se u prvom redu database.txt datoteke nalazi SHA256 sažetak glavne zaporke.
Ukoliko se sažetak unesene šifre ne poklapa sa spremljenim sažetkom, glavna zaporka je kriva ili je integrite narušen.

Nakon što je unesena ispravna glavna zaporka, korisnik može nastaviti s korištenjem aplikacije.

Aplikacija se ponaša poput sučelja u komandnoj liniji s naredbama:

    init [MASTER]         - Inicijalizira glavnu zaporku i briše staru datoteku s zaporkama ako postoji
    get  [URL]            - Vraća zaporku za zadani URL
    put  [URL] [PASSWORD] - Postavlja zaporku za zadani URL
    help [COMMAND]        - Ispiuje uputstva za traženu komandu
    exit                  - Gasi aplikaciju

Enkripcija zaporki:
    1. Od glavne zaporke deriviramo tri nova ključa k1, k2, k3 i inicijalizacijski vektor IV
    2. Koristeći k1 i HmacSHA256 dobivamo sažetak URL-a web stranice koji će se nalaziti u prvom stupcu database.txt
    2. Na zadanu zaporku dodamo naumično generirane znakove kako bi dopunili zaporku do duljine od 272 znaka.
       Nasumično generirani brojevi su od zaporke odvojeni razmakom
    3. Zatim šifriramo zaporku pomoću AES128, IV i k2. Dobiveni šifrat čini drugi stupac databse.txt
    4. U treći stupac dolazi token koji koristimo za provjeru integriteta. Token se generira
       tako da kroz funkciju sažetka HmacSHA256 koristeći k3 provučemo sažetak URL-a na
       koji smo dodali šifrat zaporke.

Dohvat zaporke:
    1. Od glavne zaporke deriviramo tri nova ključa k1, k2, k3 i inicijalizacijski vektor IV
    2. Prilikom dohvata zaporke prvo se izračuna HmacSHA256 sažetak URL-a koristeći k1.
       Taj sažetak nam omogućuje da pronađemo redak u kojem se nalazi tražena zaporka u datoteci.
    3. Nakon što pronađemo traženi redak, konkatenirani prvi i drugi stupac provučemo kroz HmacSHA256 funkciju
       sažetka koristeći k3 kako bi dobiveni sažetak usporedili s trećim stupcem koji nam služi kao provjera integriteta.
    4. Ako je integritet potvrđen, koristi se AES128, IV i k2 kako bi se dešifrirao šifrat drugog stupca koji
       odgovara traženoj zaporci. Dodano punjenje se odbaci jer je odvojeno razmakom


Sigurnosni zahtjevi:
    1. Povjerljivost zaporki:
        - Informacija o duljini zaštićena jer su sve zaporke prije šifriranja produljene na 272 znakova.
        - Ista zaporka spremljena po drugi put će imati drugačiji šifrat jer se znakovi za produljivanje
          zaporke biraju nasumično

    2. Povjerljivost adresa:
        - Informacija o adresi su zaštićene jer je provučena kroz funckiju sažetka.

    3. Integritet adresa i zaporki:
        - Nije moguće da korisnik dobije od alata zaporku za određenu adresu, ako prethodno
          nije unio točno tu zaporku za točno tu adresu jer se glavna zaporka provjerava prilikom
          pokretanja progarama te je svaki par adresa zaporka zaštićen tokenom za provjeru integriteta
          (HmacSHA256).
        - Iz istog razloga nije moguć ni napad zamjene